plugins {
    id('java')
    id('application')
    id('java-library')
    id('org.jetbrains.kotlin.jvm') version '1.5.31'
    id('org.openjfx.javafxplugin') version '0.0.10'
    id('org.beryx.jlink') version '2.24.1'
}

group('at.shehata')

repositories {
    mavenCentral()
    flatDir {
        dirs('libs')
    }
}

ext {
    junitVersion = '5.8.1'
}

sourceCompatibility = '15'
targetCompatibility = '15'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'at.shehata.ex3.GISApplication'
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = '15'
    }
}

javafx {
    version = '18.0.1'
    modules = ['javafx.controls', 'javafx.swing']
}

dependencies {
    def libs = fileTree('libs') { include '*.jar' }
    implementation(libs)

    // https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-javafx
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.6.1")
    // https://mvnrepository.com/artifact/net.postgis/postgis-jdbc
    implementation("net.postgis:postgis-jdbc:2.5.1")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

run {
    enableAssertions = true
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

mainClassName = 'at.shehata.ex3.GISApplication'

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'at.shehata.ex3.LauncherKt'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jlinkZip {
    group = 'distribution'
}